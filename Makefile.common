
ifeq ($(DEBUG), 1)
DEFINES += -O0 -g
else
DEFINES += -O3 -DNDEBUG=1
endif

SOURCES :=
SOURCES += $(CORE_DIR)/apu.c
SOURCES += $(CORE_DIR)/apuaux.c
SOURCES += $(CORE_DIR)/c4.c
SOURCES += $(CORE_DIR)/c4emu.c
SOURCES += $(CORE_DIR)/cheats.c
SOURCES += $(CORE_DIR)/cheats2.c
SOURCES += $(CORE_DIR)/clip.c
SOURCES += $(CORE_DIR)/data.c
SOURCES += $(CORE_DIR)/dsp1.c
SOURCES += $(CORE_DIR)/fxemu.c
SOURCES += $(CORE_DIR)/fxinst.c
SOURCES += $(CORE_DIR)/globals.c
SOURCES += $(CORE_DIR)/dma.c
SOURCES += $(CORE_DIR)/memmap.c
SOURCES += $(CORE_DIR)/cpu.c
SOURCES += $(CORE_DIR)/cpuexec.c
SOURCES += $(CORE_DIR)/cpuops.c
SOURCES += $(CORE_DIR)/sa1.c
SOURCES += $(CORE_DIR)/sa1cpu.c
SOURCES += $(CORE_DIR)/sdd1.c
SOURCES += $(CORE_DIR)/sdd1emu.c
SOURCES += $(CORE_DIR)/snapshot.c
SOURCES += $(CORE_DIR)/soundux.c
SOURCES += $(CORE_DIR)/spc700.c
SOURCES += $(CORE_DIR)/srtc.c
SOURCES += $(LIBRETRO_DIR)/libretro.c
SOURCES += $(LIBRETRO_DIR)/memstream.c

ifeq ($(ARM_ASM), 1)
SOURCES += $(CORE_DIR)/spc700a.s
SOURCES += $(CORE_DIR)/spc_decode.S
SOURCES += $(CORE_DIR)/ppu.c
SOURCES += $(CORE_DIR)/rops.c
SOURCES += $(CORE_DIR)/mode7new.c
SOURCES += $(CORE_DIR)/mode7.c
SOURCES += $(CORE_DIR)/mode7add.c
SOURCES += $(CORE_DIR)/mode7add1_2.c
SOURCES += $(CORE_DIR)/mode7sub.c
SOURCES += $(CORE_DIR)/mode7sub1_2.c
SOURCES += $(CORE_DIR)/mode7prio.c
SOURCES += $(CORE_DIR)/mode7addprio.c
SOURCES += $(CORE_DIR)/mode7add1_2prio.c
SOURCES += $(CORE_DIR)/mode7subprio.c
SOURCES += $(CORE_DIR)/mode7sub1_2prio.c
SOURCES += $(CORE_DIR)/gfx16.c
SOURCES += $(CORE_DIR)/tile16.c
SOURCES += $(CORE_DIR)/tile16add.c
SOURCES += $(CORE_DIR)/tile16add1_2.c
SOURCES += $(CORE_DIR)/tile16fadd1_2.c
SOURCES += $(CORE_DIR)/tile16sub.c
SOURCES += $(CORE_DIR)/tile16sub1_2.c
SOURCES += $(CORE_DIR)/tile16fsub1_2.c
SOURCES += $(CORE_DIR)/os9x_65c816_global.s
SOURCES += $(CORE_DIR)/os9x_65c816_spcasm.s
SOURCES += $(CORE_DIR)/os9x_65c816_spcc.s
#SOURCES += $(CORE_DIR)/os9x_65c816.s
SOURCES += $(CORE_DIR)/os9x_asm_cpu.c

DEFINES += -mstructure-size-boundary=32
DEFINES += -DARM_ASM
DEFINES += -DRIGHTSHIFT_IS_SAR
else
SOURCES += $(CORE_DIR)/ppu_.c
SOURCES += $(CORE_DIR)/gfx.c
SOURCES += $(CORE_DIR)/tile.c

DEFINES += -D__OLD_RASTER_FX__
endif


#DEFINES += -D__GP2X__
#DEFINES += -DASMCPU
#DEFINES += -DVAR_CYCLES
#DEFINES += -D_C_GW_
#DEFINES += -DUSE_SA1
#DEFINES +=  -DFAST_LSB_WORD_ACCESS
ifeq ($(platform), 3ds)
# Do we need all this? Causes issues on non-GCC compilers, etc. 
DEFINES += -ffast-math
DEFINES += -finline -finline-functions -fexpensive-optimizations
DEFINES += -falign-functions=16 -falign-loops -falign-labels
DEFINES += -falign-jumps -fstrict-aliasing -fsigned-char -frename-registers -fweb
DEFINES += -fomit-frame-pointer
endif

DEFINES += -ffast-math -funroll-loops -fomit-frame-pointer

INCLUDES   = -I$(LIBRETRO_DIR) -I$(CORE_DIR) -I.
DEFINES    += -DHAVE_STRINGS_H -DHAVE_STDINT_H -DHAVE_INTTYPES_H -D__LIBRETRO__ -DINLINE=inline
#DEFINES += -DRIGHTSHIFT_IS_SAR
DEFINES    += -DUSE_SA1

ifeq ($(platform), sncps3)
WARNINGS_DEFINES =
CODE_DEFINES =
else
WARNINGS_DEFINES = -Wall -W -Wno-unused-parameter -Wno-parentheses -Wno-write-strings -Wno-comment -Werror=implicit-function-declaration
CODE_DEFINES = -fomit-frame-pointer
endif

COMMON_DEFINES += $(CODE_DEFINES) $(WARNINGS_DEFINES) $(fpic)
